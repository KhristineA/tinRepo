/*
Deployment script for aspnet-Vidly-20220401120511

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "aspnet-Vidly-20220401120511"
:setvar DefaultFilePrefix "aspnet-Vidly-20220401120511"
:setvar DefaultDataPath "C:\Users\Dell\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Dell\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_dbo.RentalDetails_dbo.Movies_Movie_Id]...';


GO
ALTER TABLE [dbo].[RentalDetails] DROP CONSTRAINT [FK_dbo.RentalDetails_dbo.Movies_Movie_Id];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_dbo.RentalDetails_dbo.RentalHeader_Rent_Id]...';


GO
ALTER TABLE [dbo].[RentalDetails] DROP CONSTRAINT [FK_dbo.RentalDetails_dbo.RentalHeader_Rent_Id];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_dbo.RentalHeader_dbo.Customers_Customer_Id]...';


GO
ALTER TABLE [dbo].[RentalHeaders] DROP CONSTRAINT [FK_dbo.RentalHeader_dbo.Customers_Customer_Id];


GO
PRINT N'Starting rebuilding table [dbo].[RentalDetails]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_RentalDetails] (
    [Id]           INT      IDENTITY (1, 1) NOT NULL,
    [RentalId]     INT      NOT NULL,
    [Movie_Id]     INT      NOT NULL,
    [DateReturned] DATETIME NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_dbo.RentalDetails1] PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[RentalDetails])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RentalDetails] ON;
        INSERT INTO [dbo].[tmp_ms_xx_RentalDetails] ([Id], [RentalId], [Movie_Id], [DateReturned])
        SELECT   [Id],
                 [RentalId],
                 [Movie_Id],
                 [DateReturned]
        FROM     [dbo].[RentalDetails]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RentalDetails] OFF;
    END

DROP TABLE [dbo].[RentalDetails];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_RentalDetails]', N'RentalDetails';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_dbo.RentalDetails1]', N'PK_dbo.RentalDetails', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[RentalHeaders]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_RentalHeaders] (
    [RentalId]    INT      IDENTITY (1, 1) NOT NULL,
    [Customer_Id] INT      NOT NULL,
    [DateRented]  DATETIME NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_dbo.RentalHeaders1] PRIMARY KEY CLUSTERED ([RentalId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[RentalHeaders])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RentalHeaders] ON;
        INSERT INTO [dbo].[tmp_ms_xx_RentalHeaders] ([RentalId], [Customer_Id], [DateRented])
        SELECT   [RentalId],
                 [Customer_Id],
                 [DateRented]
        FROM     [dbo].[RentalHeaders]
        ORDER BY [RentalId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RentalHeaders] OFF;
    END

DROP TABLE [dbo].[RentalHeaders];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_RentalHeaders]', N'RentalHeaders';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_dbo.RentalHeaders1]', N'PK_dbo.RentalHeaders', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [dbo].[FK_dbo.RentalDetails_dbo.Movies_Movie_Id]...';


GO
ALTER TABLE [dbo].[RentalDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.RentalDetails_dbo.Movies_Movie_Id] FOREIGN KEY ([Movie_Id]) REFERENCES [dbo].[Movies] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_dbo.RentalDetails_dbo.RentalHeader_Rent_Id]...';


GO
ALTER TABLE [dbo].[RentalDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.RentalDetails_dbo.RentalHeader_Rent_Id] FOREIGN KEY ([RentalId]) REFERENCES [dbo].[RentalHeaders] ([RentalId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_dbo.RentalHeader_dbo.Customers_Customer_Id]...';


GO
ALTER TABLE [dbo].[RentalHeaders] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.RentalHeader_dbo.Customers_Customer_Id] FOREIGN KEY ([Customer_Id]) REFERENCES [dbo].[Customers] ([Id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[RentalDetails] WITH CHECK CHECK CONSTRAINT [FK_dbo.RentalDetails_dbo.Movies_Movie_Id];

ALTER TABLE [dbo].[RentalDetails] WITH CHECK CHECK CONSTRAINT [FK_dbo.RentalDetails_dbo.RentalHeader_Rent_Id];

ALTER TABLE [dbo].[RentalHeaders] WITH CHECK CHECK CONSTRAINT [FK_dbo.RentalHeader_dbo.Customers_Customer_Id];


GO
PRINT N'Update complete.';


GO
